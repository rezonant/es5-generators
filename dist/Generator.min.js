/*! es5generators 2015-07-25 */
function Generator(cb){var self=this;self._registeredEmits=[],self._registeredCatches=[],self._registeredDones=[];var callback=function(fns,args){for(var i=0,max=fns.length;max>i;++i)fns[i].apply(null,args)},done=function(){callback(self._registeredDones,[])},reject=function(error){callback(self._registeredCatches,[error])},emit=function(item){callback(self._registeredEmits,[item])};setTimeout(function(){if("GeneratorFunction"==cb.constructor.name&&(cb=cb()),"GeneratorFunctionPrototype"==cb.constructor.name){for(var item;!(item=cb.next()).done;)emit(item.value);return void done()}cb(done,reject,emit)},1)}"undefined"!=typeof window&&(window.Generator=Generator),"undefined"!=typeof module&&(module.exports=Generator),Generator.InvalidResolution={error:"streamablePromise-invalid-resolution",message:"You cannot resolve() a Generator with a value. The value of a streamable promise is always the array of yielded items"},Generator.InvalidSubpromiseResolution={error:"streamablePromise-invalid-subresolution",message:"While attempting to combine the results of multiple promises, one of the (non-streamable) promises returned an item which was not an array."},Generator.union=function(promises){return new Generator(function(resolve,reject,emit){for(var i=0,max=promises.length;max>i;++i){var promise=promises[i];promise.emit?promise.emit(function(item){emit(item)}):promise.then(function(items){if("object"!=typeof items||void 0===items.length)throw Generator.InvalidSubpromiseResolution;for(var j=0,jMax=items.length;jMax>j;++j)emit(items[j])})}})},Generator.exclude=function(setA,setB,comparator){return void 0===comparator&&(comparator=function(a,b){return a===b}),new Generator(function(resolve,reject,emit){var itemsA=[],itemsB=[];Promise.all([setA.then(function(items){itemsA=items}),setB.then(function(items){itemsB=items})]).then(function(){for(var i=0,max=itemsA.length;max>i;++i){for(var itemA=itemsA[i],skip=!1,j=0,jMax=itemsB.length;jMax>j;++j){var itemB=itemsB[j];if(comparator(itemA,itemB)){skip=!0;break}}skip||emit(itemA)}resolve()})})},Generator.intersectByHash=function(promises,hasher){return new Generator(function(resolve,reject,emit){for(var map={},handlers=[],i=0,max=promises.length;max>i;++i){var promise=promises[i],handleEmit=function(item){var id=identify(item),count=0;map[id]&&(count=map[id]),count+=1,map[id]=count,count==promises.length&&emit(item)};promise.emit?handlers.push(new Promise(function(resolve,reject){handlers.emit(handleEmit).then(function(){resolve()})})):handlers.push(promise.then(function(items){for(var j=0,jMax=items.length;jMax>j;++j)handleEmit(items[j])}))}Promise.all(handlers).then(function(){resolve()})})},Generator.intersectByComparison=function(promises,comparator){return new Generator(function(resolve,reject,emit){for(var handlers=[],distinctItems=[],i=0,max=promises.length;max>i;++i){var promise=promises[i],handleEmit=function(item){for(var found=!1,j=0,jMax=distinctItems.length;jMax>j;++j){var distinctItem=distinctItems[j];if(comparator(distinctItem.item,item)){distinctItem.count+=1,distinctItem.emitted||distinctItem.count!=promises.length||(distinctItem.emitted=!0,emit(distinctItem.item)),found=!0;break}}if(!found){var distinctItem={item:item,count:1,emitted:!1};distinctItem.count==promises.length&&(emit(distinctItem.item),distinctItem.emitted=!0),distinctItems.push(distinctItem)}};promise.emit?handlers.push(new Promise(function(resolve,reject){promise.emit(handleEmit).then(function(){resolve()})})):handlers.push(promise.then(function(items){for(var j=0,jMax=items.length;jMax>j;++j)handleEmit(items[j])}))}Promise.all(handlers).then(function(){resolve()})})},Generator.prototype.emit=function(cb){return this._registeredEmits.push(cb),this},Generator.prototype["catch"]=function(cb){return this._registeredCatches.push(cb),this},Generator.prototype.done=function(cb){return this._registeredDones.push(cb),this},Generator.prototype.then=function(cb){var self=this;return new Promise(function(resolve,reject){var items=[];self.emit(function(item){items.push(item)}).done(function(){try{var result=cb(items);resolve(result)}catch(e){reject(e)}})})};